{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "denom",
    "epoch_period",
    "owner",
    "protocol_fee_contract",
    "protocol_reward_fee",
    "swap_config",
    "unbond_period",
    "validators"
  ],
  "properties": {
    "denom": {
      "description": "Name of the liquid staking token",
      "type": "string"
    },
    "epoch_period": {
      "description": "How often the unbonding queue is to be executed, in seconds",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "owner": {
      "description": "Account who can call certain privileged functions",
      "type": "string"
    },
    "protocol_fee_contract": {
      "description": "Contract address where fees are sent",
      "type": "string"
    },
    "protocol_reward_fee": {
      "description": "Fees that are being applied during reinvest of staking rewards",
      "allOf": [
        {
          "$ref": "#/definitions/Decimal"
        }
      ]
    },
    "swap_config": {
      "description": "swap config",
      "allOf": [
        {
          "$ref": "#/definitions/SwapConfig"
        }
      ]
    },
    "unbond_period": {
      "description": "The staking module's unbonding time, in seconds",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "validators": {
      "description": "Initial set of validators who will receive the delegations",
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  },
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "SwapConfig": {
      "type": "object",
      "required": [
        "allowed_paths",
        "router_contract"
      ],
      "properties": {
        "allowed_paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SwapPath"
          }
        },
        "router_contract": {
          "type": "string"
        }
      }
    },
    "SwapPath": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
